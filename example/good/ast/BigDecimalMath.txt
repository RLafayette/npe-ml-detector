(compilationUnit (packageDeclaration package (packageName (packageName (packageName (packageName com) . google) . common) . math) ;) (importDeclaration (singleTypeImportDeclaration import (typeName (packageOrTypeName (packageOrTypeName (packageOrTypeName (packageOrTypeName com) . google) . common) . annotations) . GwtIncompatible) ;)) (importDeclaration (singleTypeImportDeclaration import (typeName (packageOrTypeName (packageOrTypeName java) . math) . BigDecimal) ;)) (importDeclaration (singleTypeImportDeclaration import (typeName (packageOrTypeName (packageOrTypeName java) . math) . RoundingMode) ;)) (typeDeclaration (classDeclaration (normalClassDeclaration (classModifier (annotation (markerAnnotation @ (typeName GwtIncompatible)))) (classModifier (annotation (markerAnnotation @ (typeName ElementTypesAreNonnullByDefault)))) (classModifier public) class BigDecimalMath (classBody { (classBodyDeclaration (constructorDeclaration (constructorModifier private) (constructorDeclarator (simpleTypeName BigDecimalMath) ( )) (constructorBody { }))) (classBodyDeclaration (classMemberDeclaration (methodDeclaration (methodModifier public) (methodModifier static) (methodHeader (result (unannType (unannPrimitiveType (numericType (floatingPointType double))))) (methodDeclarator roundToDouble ( (formalParameterList (formalParameters (formalParameter (unannType (unannReferenceType (unannClassOrInterfaceType (unannClassType_lfno_unannClassOrInterfaceType BigDecimal)))) (variableDeclaratorId x))) , (lastFormalParameter (formalParameter (unannType (unannReferenceType (unannClassOrInterfaceType (unannClassType_lfno_unannClassOrInterfaceType RoundingMode)))) (variableDeclaratorId mode)))) ))) (methodBody (block { (blockStatements (blockStatement (statement (statementWithoutTrailingSubstatement (returnStatement return (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray_lfno_primary (methodInvocation_lfno_primary (typeName (packageOrTypeName BigDecimalToDoubleRounder) . INSTANCE) . roundToDouble ( (argumentList (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName x))))))))))))))))) , (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName mode)))))))))))))))))) )))))))))))))))))))) ;))))) }))))) (classBodyDeclaration (classMemberDeclaration (classDeclaration (normalClassDeclaration (classModifier private) (classModifier static) class BigDecimalToDoubleRounder (superclass extends (classType ToDoubleRounder (typeArguments < (typeArgumentList (typeArgument (referenceType (classOrInterfaceType (classType_lfno_classOrInterfaceType BigDecimal))))) >))) (classBody { (classBodyDeclaration (classMemberDeclaration (fieldDeclaration (fieldModifier static) (fieldModifier final) (unannType (unannReferenceType (unannClassOrInterfaceType (unannClassType_lfno_unannClassOrInterfaceType BigDecimalToDoubleRounder)))) (variableDeclaratorList (variableDeclarator (variableDeclaratorId INSTANCE) = (variableInitializer (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray_lfno_primary (classInstanceCreationExpression_lfno_primary new BigDecimalToDoubleRounder ( ))))))))))))))))))))))) ;))) (classBodyDeclaration (constructorDeclaration (constructorModifier private) (constructorDeclarator (simpleTypeName BigDecimalToDoubleRounder) ( )) (constructorBody { }))) (classBodyDeclaration (classMemberDeclaration (methodDeclaration (methodModifier (annotation (markerAnnotation @ (typeName Override)))) (methodHeader (result (unannType (unannPrimitiveType (numericType (floatingPointType double))))) (methodDeclarator roundToDoubleArbitrarily ( (formalParameterList (lastFormalParameter (formalParameter (unannType (unannReferenceType (unannClassOrInterfaceType (unannClassType_lfno_unannClassOrInterfaceType BigDecimal)))) (variableDeclaratorId bigDecimal)))) ))) (methodBody (block { (blockStatements (blockStatement (statement (statementWithoutTrailingSubstatement (returnStatement return (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray_lfno_primary (methodInvocation_lfno_primary (typeName bigDecimal) . doubleValue ( )))))))))))))))))))) ;))))) }))))) (classBodyDeclaration (classMemberDeclaration (methodDeclaration (methodModifier (annotation (markerAnnotation @ (typeName Override)))) (methodHeader (result (unannType (unannPrimitiveType (numericType (integralType int))))) (methodDeclarator sign ( (formalParameterList (lastFormalParameter (formalParameter (unannType (unannReferenceType (unannClassOrInterfaceType (unannClassType_lfno_unannClassOrInterfaceType BigDecimal)))) (variableDeclaratorId bigDecimal)))) ))) (methodBody (block { (blockStatements (blockStatement (statement (statementWithoutTrailingSubstatement (returnStatement return (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray_lfno_primary (methodInvocation_lfno_primary (typeName bigDecimal) . signum ( )))))))))))))))))))) ;))))) }))))) (classBodyDeclaration (classMemberDeclaration (methodDeclaration (methodModifier (annotation (markerAnnotation @ (typeName Override)))) (methodHeader (result (unannType (unannReferenceType (unannClassOrInterfaceType (unannClassType_lfno_unannClassOrInterfaceType BigDecimal))))) (methodDeclarator toX ( (formalParameterList (formalParameters (formalParameter (unannType (unannPrimitiveType (numericType (floatingPointType double)))) (variableDeclaratorId d))) , (lastFormalParameter (formalParameter (unannType (unannReferenceType (unannClassOrInterfaceType (unannClassType_lfno_unannClassOrInterfaceType RoundingMode)))) (variableDeclaratorId mode)))) ))) (methodBody (block { (blockStatements (blockStatement (statement (statementWithoutTrailingSubstatement (returnStatement return (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray_lfno_primary (classInstanceCreationExpression_lfno_primary new BigDecimal ( (argumentList (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName d)))))))))))))))))) )))))))))))))))))))) ;))))) }))))) (classBodyDeclaration (classMemberDeclaration (methodDeclaration (methodModifier (annotation (markerAnnotation @ (typeName Override)))) (methodHeader (result (unannType (unannReferenceType (unannClassOrInterfaceType (unannClassType_lfno_unannClassOrInterfaceType BigDecimal))))) (methodDeclarator minus ( (formalParameterList (formalParameters (formalParameter (unannType (unannReferenceType (unannClassOrInterfaceType (unannClassType_lfno_unannClassOrInterfaceType BigDecimal)))) (variableDeclaratorId a))) , (lastFormalParameter (formalParameter (unannType (unannReferenceType (unannClassOrInterfaceType (unannClassType_lfno_unannClassOrInterfaceType BigDecimal)))) (variableDeclaratorId b)))) ))) (methodBody (block { (blockStatements (blockStatement (statement (statementWithoutTrailingSubstatement (returnStatement return (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray_lfno_primary (methodInvocation_lfno_primary (typeName a) . subtract ( (argumentList (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName b)))))))))))))))))) )))))))))))))))))))) ;))))) }))))) }))))) })))) <EOF>)