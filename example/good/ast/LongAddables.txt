(compilationUnit (packageDeclaration package (packageName (packageName (packageName (packageName com) . google) . common) . hash) ;) (importDeclaration (singleTypeImportDeclaration import (typeName (packageOrTypeName (packageOrTypeName (packageOrTypeName (packageOrTypeName com) . google) . common) . base) . Supplier) ;)) (importDeclaration (singleTypeImportDeclaration import (typeName (packageOrTypeName (packageOrTypeName (packageOrTypeName (packageOrTypeName java) . util) . concurrent) . atomic) . AtomicLong) ;)) (typeDeclaration (classDeclaration (normalClassDeclaration (classModifier (annotation (markerAnnotation @ (typeName ElementTypesAreNonnullByDefault)))) (classModifier final) class LongAddables (classBody { (classBodyDeclaration (classMemberDeclaration (fieldDeclaration (fieldModifier private) (fieldModifier static) (fieldModifier final) (unannType (unannReferenceType (unannClassOrInterfaceType (unannClassType_lfno_unannClassOrInterfaceType Supplier (typeArguments < (typeArgumentList (typeArgument (referenceType (classOrInterfaceType (classType_lfno_classOrInterfaceType LongAddable))))) >))))) (variableDeclaratorList (variableDeclarator (variableDeclaratorId SUPPLIER))) ;))) (classBodyDeclaration (staticInitializer static (block { (blockStatements (blockStatement (localVariableDeclarationStatement (localVariableDeclaration (unannType (unannReferenceType (unannClassOrInterfaceType (unannClassType_lfno_unannClassOrInterfaceType Supplier (typeArguments < (typeArgumentList (typeArgument (referenceType (classOrInterfaceType (classType_lfno_classOrInterfaceType LongAddable))))) >))))) (variableDeclaratorList (variableDeclarator (variableDeclaratorId supplier)))) ;)) (blockStatement (statement (statementWithoutTrailingSubstatement (tryStatement try (block { (blockStatements (blockStatement (localVariableDeclarationStatement (localVariableDeclaration (unannType (unannReferenceType (unannClassOrInterfaceType (unannClassType_lfno_unannClassOrInterfaceType LongAdder)))) (variableDeclaratorList (variableDeclarator (variableDeclaratorId unused) = (variableInitializer (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray_lfno_primary (classInstanceCreationExpression_lfno_primary new LongAdder ( )))))))))))))))))))))))) ;)) (blockStatement (statement (statementWithoutTrailingSubstatement (expressionStatement (statementExpression (assignment (leftHandSide (expressionName supplier)) (assignmentOperator =) (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray_lfno_primary (classInstanceCreationExpression_lfno_primary new Supplier (typeArgumentsOrDiamond (typeArguments < (typeArgumentList (typeArgument (referenceType (classOrInterfaceType (classType_lfno_classOrInterfaceType LongAddable))))) >)) ( ) (classBody { (classBodyDeclaration (classMemberDeclaration (methodDeclaration (methodModifier (annotation (markerAnnotation @ (typeName Override)))) (methodModifier public) (methodHeader (result (unannType (unannReferenceType (unannClassOrInterfaceType (unannClassType_lfno_unannClassOrInterfaceType LongAddable))))) (methodDeclarator get ( ))) (methodBody (block { (blockStatements (blockStatement (statement (statementWithoutTrailingSubstatement (returnStatement return (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray_lfno_primary (classInstanceCreationExpression_lfno_primary new LongAdder ( )))))))))))))))))))) ;))))) }))))) })))))))))))))))))))))) ;))))) }) (catches (catchClause catch ( (catchFormalParameter (catchType (unannClassType Throwable)) (variableDeclaratorId t)) ) (block { (blockStatements (blockStatement (statement (statementWithoutTrailingSubstatement (expressionStatement (statementExpression (assignment (leftHandSide (expressionName supplier)) (assignmentOperator =) (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray_lfno_primary (classInstanceCreationExpression_lfno_primary new Supplier (typeArgumentsOrDiamond (typeArguments < (typeArgumentList (typeArgument (referenceType (classOrInterfaceType (classType_lfno_classOrInterfaceType LongAddable))))) >)) ( ) (classBody { (classBodyDeclaration (classMemberDeclaration (methodDeclaration (methodModifier (annotation (markerAnnotation @ (typeName Override)))) (methodModifier public) (methodHeader (result (unannType (unannReferenceType (unannClassOrInterfaceType (unannClassType_lfno_unannClassOrInterfaceType LongAddable))))) (methodDeclarator get ( ))) (methodBody (block { (blockStatements (blockStatement (statement (statementWithoutTrailingSubstatement (returnStatement return (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray_lfno_primary (classInstanceCreationExpression_lfno_primary new PureJavaLongAddable ( )))))))))))))))))))) ;))))) }))))) })))))))))))))))))))))) ;))))) }))))))) (blockStatement (statement (statementWithoutTrailingSubstatement (expressionStatement (statementExpression (assignment (leftHandSide (expressionName SUPPLIER)) (assignmentOperator =) (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName supplier))))))))))))))))))) ;))))) }))) (classBodyDeclaration (classMemberDeclaration (methodDeclaration (methodModifier public) (methodModifier static) (methodHeader (result (unannType (unannReferenceType (unannClassOrInterfaceType (unannClassType_lfno_unannClassOrInterfaceType LongAddable))))) (methodDeclarator create ( ))) (methodBody (block { (blockStatements (blockStatement (statement (statementWithoutTrailingSubstatement (returnStatement return (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray_lfno_primary (methodInvocation_lfno_primary (typeName SUPPLIER) . get ( )))))))))))))))))))) ;))))) }))))) (classBodyDeclaration (classMemberDeclaration (classDeclaration (normalClassDeclaration (classModifier private) (classModifier static) (classModifier final) class PureJavaLongAddable (superclass extends (classType AtomicLong)) (superinterfaces implements (interfaceTypeList (interfaceType (classType LongAddable)))) (classBody { (classBodyDeclaration (classMemberDeclaration (methodDeclaration (methodModifier (annotation (markerAnnotation @ (typeName Override)))) (methodModifier public) (methodHeader (result void) (methodDeclarator increment ( ))) (methodBody (block { (blockStatements (blockStatement (statement (statementWithoutTrailingSubstatement (expressionStatement (statementExpression (methodInvocation (methodName getAndIncrement) ( ))) ;))))) }))))) (classBodyDeclaration (classMemberDeclaration (methodDeclaration (methodModifier (annotation (markerAnnotation @ (typeName Override)))) (methodModifier public) (methodHeader (result void) (methodDeclarator add ( (formalParameterList (lastFormalParameter (formalParameter (unannType (unannPrimitiveType (numericType (integralType long)))) (variableDeclaratorId x)))) ))) (methodBody (block { (blockStatements (blockStatement (statement (statementWithoutTrailingSubstatement (expressionStatement (statementExpression (methodInvocation (methodName getAndAdd) ( (argumentList (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName x)))))))))))))))))) ))) ;))))) }))))) (classBodyDeclaration (classMemberDeclaration (methodDeclaration (methodModifier (annotation (markerAnnotation @ (typeName Override)))) (methodModifier public) (methodHeader (result (unannType (unannPrimitiveType (numericType (integralType long))))) (methodDeclarator sum ( ))) (methodBody (block { (blockStatements (blockStatement (statement (statementWithoutTrailingSubstatement (returnStatement return (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray_lfno_primary (methodInvocation_lfno_primary (methodName get) ( )))))))))))))))))))) ;))))) }))))) }))))) })))) <EOF>)