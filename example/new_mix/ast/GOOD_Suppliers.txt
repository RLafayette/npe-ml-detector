(compilationUnit (packageDeclaration package (packageName (packageName (packageName (packageName com) . google) . common) . base) ;) (importDeclaration (singleStaticImportDeclaration import static (typeName (packageOrTypeName (packageOrTypeName (packageOrTypeName (packageOrTypeName com) . google) . common) . base) . NullnessCasts) . uncheckedCastNullableTToT ;)) (importDeclaration (singleStaticImportDeclaration import static (typeName (packageOrTypeName (packageOrTypeName (packageOrTypeName (packageOrTypeName com) . google) . common) . base) . Preconditions) . checkArgument ;)) (importDeclaration (singleStaticImportDeclaration import static (typeName (packageOrTypeName (packageOrTypeName (packageOrTypeName (packageOrTypeName com) . google) . common) . base) . Preconditions) . checkNotNull ;)) (importDeclaration (singleTypeImportDeclaration import (typeName (packageOrTypeName (packageOrTypeName (packageOrTypeName (packageOrTypeName com) . google) . common) . annotations) . GwtCompatible) ;)) (importDeclaration (singleTypeImportDeclaration import (typeName (packageOrTypeName (packageOrTypeName (packageOrTypeName (packageOrTypeName com) . google) . common) . annotations) . VisibleForTesting) ;)) (importDeclaration (singleTypeImportDeclaration import (typeName (packageOrTypeName (packageOrTypeName java) . io) . Serializable) ;)) (importDeclaration (singleTypeImportDeclaration import (typeName (packageOrTypeName (packageOrTypeName (packageOrTypeName java) . util) . concurrent) . TimeUnit) ;)) (importDeclaration (singleTypeImportDeclaration import (typeName (packageOrTypeName (packageOrTypeName javax) . annotation) . CheckForNull) ;)) (importDeclaration (singleTypeImportDeclaration import (typeName (packageOrTypeName (packageOrTypeName (packageOrTypeName (packageOrTypeName (packageOrTypeName org) . checkerframework) . checker) . nullness) . qual) . Nullable) ;)) (typeDeclaration (classDeclaration (normalClassDeclaration (classModifier (annotation (markerAnnotation @ (typeName GwtCompatible)))) (classModifier (annotation (markerAnnotation @ (typeName ElementTypesAreNonnullByDefault)))) (classModifier public) (classModifier final) class Suppliers (classBody { (classBodyDeclaration (constructorDeclaration (constructorModifier private) (constructorDeclarator (simpleTypeName Suppliers) ( )) (constructorBody { }))) (classBodyDeclaration (classMemberDeclaration (methodDeclaration (methodModifier public) (methodModifier static) (methodHeader (typeParameters < (typeParameterList (typeParameter F (typeBound extends (typeVariable (annotation (markerAnnotation @ (typeName Nullable))) Object))) , (typeParameter T (typeBound extends (typeVariable (annotation (markerAnnotation @ (typeName Nullable))) Object)))) >) (result (unannType (unannReferenceType (unannClassOrInterfaceType (unannClassType_lfno_unannClassOrInterfaceType Supplier (typeArguments < (typeArgumentList (typeArgument (referenceType (classOrInterfaceType (classType_lfno_classOrInterfaceType T))))) >)))))) (methodDeclarator compose ( (formalParameterList (formalParameters (formalParameter (unannType (unannReferenceType (unannClassOrInterfaceType (unannClassType_lfno_unannClassOrInterfaceType Function (typeArguments < (typeArgumentList (typeArgument (wildcard ? (wildcardBounds super (referenceType (classOrInterfaceType (classType_lfno_classOrInterfaceType F)))))) , (typeArgument (referenceType (classOrInterfaceType (classType_lfno_classOrInterfaceType T))))) >))))) (variableDeclaratorId function))) , (lastFormalParameter (formalParameter (unannType (unannReferenceType (unannClassOrInterfaceType (unannClassType_lfno_unannClassOrInterfaceType Supplier (typeArguments < (typeArgumentList (typeArgument (referenceType (classOrInterfaceType (classType_lfno_classOrInterfaceType F))))) >))))) (variableDeclaratorId supplier)))) ))) (methodBody (block { (blockStatements (blockStatement (statement (statementWithoutTrailingSubstatement (returnStatement return (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray_lfno_primary (classInstanceCreationExpression_lfno_primary new SupplierComposition (typeArgumentsOrDiamond < >) ( (argumentList (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName function))))))))))))))))) , (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName supplier)))))))))))))))))) )))))))))))))))))))) ;))))) }))))) (classBodyDeclaration (classMemberDeclaration (classDeclaration (normalClassDeclaration (classModifier private) (classModifier static) class SupplierComposition (typeParameters < (typeParameterList (typeParameter F (typeBound extends (typeVariable (annotation (markerAnnotation @ (typeName Nullable))) Object))) , (typeParameter T (typeBound extends (typeVariable (annotation (markerAnnotation @ (typeName Nullable))) Object)))) >) (superinterfaces implements (interfaceTypeList (interfaceType (classType Supplier (typeArguments < (typeArgumentList (typeArgument (referenceType (classOrInterfaceType (classType_lfno_classOrInterfaceType T))))) >))) , (interfaceType (classType Serializable)))) (classBody { (classBodyDeclaration (classMemberDeclaration (fieldDeclaration (fieldModifier final) (unannType (unannReferenceType (unannClassOrInterfaceType (unannClassType_lfno_unannClassOrInterfaceType Function (typeArguments < (typeArgumentList (typeArgument (wildcard ? (wildcardBounds super (referenceType (classOrInterfaceType (classType_lfno_classOrInterfaceType F)))))) , (typeArgument (referenceType (classOrInterfaceType (classType_lfno_classOrInterfaceType T))))) >))))) (variableDeclaratorList (variableDeclarator (variableDeclaratorId function))) ;))) (classBodyDeclaration (classMemberDeclaration (fieldDeclaration (fieldModifier final) (unannType (unannReferenceType (unannClassOrInterfaceType (unannClassType_lfno_unannClassOrInterfaceType Supplier (typeArguments < (typeArgumentList (typeArgument (referenceType (classOrInterfaceType (classType_lfno_classOrInterfaceType F))))) >))))) (variableDeclaratorList (variableDeclarator (variableDeclaratorId supplier))) ;))) (classBodyDeclaration (constructorDeclaration (constructorDeclarator (simpleTypeName SupplierComposition) ( (formalParameterList (formalParameters (formalParameter (unannType (unannReferenceType (unannClassOrInterfaceType (unannClassType_lfno_unannClassOrInterfaceType Function (typeArguments < (typeArgumentList (typeArgument (wildcard ? (wildcardBounds super (referenceType (classOrInterfaceType (classType_lfno_classOrInterfaceType F)))))) , (typeArgument (referenceType (classOrInterfaceType (classType_lfno_classOrInterfaceType T))))) >))))) (variableDeclaratorId function))) , (lastFormalParameter (formalParameter (unannType (unannReferenceType (unannClassOrInterfaceType (unannClassType_lfno_unannClassOrInterfaceType Supplier (typeArguments < (typeArgumentList (typeArgument (referenceType (classOrInterfaceType (classType_lfno_classOrInterfaceType F))))) >))))) (variableDeclaratorId supplier)))) )) (constructorBody { (blockStatements (blockStatement (statement (statementWithoutTrailingSubstatement (expressionStatement (statementExpression (assignment (leftHandSide (fieldAccess (primary (primaryNoNewArray_lfno_primary this)) . function)) (assignmentOperator =) (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray_lfno_primary (methodInvocation_lfno_primary (methodName checkNotNull) ( (argumentList (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName function)))))))))))))))))) )))))))))))))))))))))) ;)))) (blockStatement (statement (statementWithoutTrailingSubstatement (expressionStatement (statementExpression (assignment (leftHandSide (fieldAccess (primary (primaryNoNewArray_lfno_primary this)) . supplier)) (assignmentOperator =) (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray_lfno_primary (methodInvocation_lfno_primary (methodName checkNotNull) ( (argumentList (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName supplier)))))))))))))))))) )))))))))))))))))))))) ;))))) }))) (classBodyDeclaration (classMemberDeclaration (methodDeclaration (methodModifier (annotation (markerAnnotation @ (typeName Override)))) (methodModifier (annotation (markerAnnotation @ (typeName ParametricNullness)))) (methodModifier public) (methodHeader (result (unannType (unannReferenceType (unannClassOrInterfaceType (unannClassType_lfno_unannClassOrInterfaceType T))))) (methodDeclarator get ( ))) (methodBody (block { (blockStatements (blockStatement (statement (statementWithoutTrailingSubstatement (returnStatement return (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray_lfno_primary (methodInvocation_lfno_primary (typeName function) . apply ( (argumentList (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray_lfno_primary (methodInvocation_lfno_primary (typeName supplier) . get ( ))))))))))))))))))))) )))))))))))))))))))) ;))))) }))))) (classBodyDeclaration (classMemberDeclaration (methodDeclaration (methodModifier (annotation (markerAnnotation @ (typeName Override)))) (methodModifier public) (methodHeader (result (unannType (unannPrimitiveType boolean))) (methodDeclarator equals ( (formalParameterList (lastFormalParameter (formalParameter (variableModifier (annotation (markerAnnotation @ (typeName CheckForNull)))) (unannType (unannReferenceType (unannClassOrInterfaceType (unannClassType_lfno_unannClassOrInterfaceType Object)))) (variableDeclaratorId obj)))) ))) (methodBody (block { (blockStatements (blockStatement (statement (ifThenStatement if ( (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName obj)))))))) instanceof (referenceType (classOrInterfaceType (classType_lfno_classOrInterfaceType SupplierComposition))))))))))))) ) (statement (statementWithoutTrailingSubstatement (block { (blockStatements (blockStatement (localVariableDeclarationStatement (localVariableDeclaration (unannType (unannReferenceType (unannClassOrInterfaceType (unannClassType_lfno_unannClassOrInterfaceType SupplierComposition (typeArguments < (typeArgumentList (typeArgument (wildcard ?)) , (typeArgument (wildcard ?))) >))))) (variableDeclaratorList (variableDeclarator (variableDeclaratorId that) = (variableInitializer (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (castExpression ( (referenceType (classOrInterfaceType (classType_lfno_classOrInterfaceType SupplierComposition (typeArguments < (typeArgumentList (typeArgument (wildcard ?)) , (typeArgument (wildcard ?))) >)))) ) (unaryExpressionNotPlusMinus (postfixExpression (expressionName obj))))))))))))))))))))))) ;)) (blockStatement (statement (statementWithoutTrailingSubstatement (returnStatement return (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray_lfno_primary (methodInvocation_lfno_primary (typeName function) . equals ( (argumentList (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName (ambiguousName that) . function)))))))))))))))))) )))))))))))))))) && (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray_lfno_primary (methodInvocation_lfno_primary (typeName supplier) . equals ( (argumentList (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName (ambiguousName that) . supplier)))))))))))))))))) )))))))))))))))))))) ;))))) })))))) (blockStatement (statement (statementWithoutTrailingSubstatement (returnStatement return (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray_lfno_primary (literal BOOLEAN))))))))))))))))))) ;))))) }))))) (classBodyDeclaration (classMemberDeclaration (methodDeclaration (methodModifier (annotation (markerAnnotation @ (typeName Override)))) (methodModifier public) (methodHeader (result (unannType (unannPrimitiveType (numericType (integralType int))))) (methodDeclarator hashCode ( ))) (methodBody (block { (blockStatements (blockStatement (statement (statementWithoutTrailingSubstatement (returnStatement return (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray_lfno_primary (methodInvocation_lfno_primary (typeName Objects) . hashCode ( (argumentList (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName function))))))))))))))))) , (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName supplier)))))))))))))))))) )))))))))))))))))))) ;))))) }))))) (classBodyDeclaration (classMemberDeclaration (methodDeclaration (methodModifier (annotation (markerAnnotation @ (typeName Override)))) (methodModifier public) (methodHeader (result (unannType (unannReferenceType (unannClassOrInterfaceType (unannClassType_lfno_unannClassOrInterfaceType String))))) (methodDeclarator toString ( ))) (methodBody (block { (blockStatements (blockStatement (statement (statementWithoutTrailingSubstatement (returnStatement return (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (additiveExpression (additiveExpression (additiveExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray_lfno_primary (literal STRING)))))))) + (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName function)))))) + (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray_lfno_primary (literal STRING)))))))) + (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName supplier)))))) + (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray_lfno_primary (literal STRING))))))))))))))))))) ;))))) }))))) (classBodyDeclaration (classMemberDeclaration (fieldDeclaration (fieldModifier private) (fieldModifier static) (fieldModifier final) (unannType (unannPrimitiveType (numericType (integralType long)))) (variableDeclaratorList (variableDeclarator (variableDeclaratorId serialVersionUID) = (variableInitializer (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray_lfno_primary (literal NUMBER)))))))))))))))))))))) ;))) }))))) (classBodyDeclaration (classMemberDeclaration (methodDeclaration (methodModifier public) (methodModifier static) (methodHeader (typeParameters < (typeParameterList (typeParameter T (typeBound extends (typeVariable (annotation (markerAnnotation @ (typeName Nullable))) Object)))) >) (result (unannType (unannReferenceType (unannClassOrInterfaceType (unannClassType_lfno_unannClassOrInterfaceType Supplier (typeArguments < (typeArgumentList (typeArgument (referenceType (classOrInterfaceType (classType_lfno_classOrInterfaceType T))))) >)))))) (methodDeclarator memoize ( (formalParameterList (lastFormalParameter (formalParameter (unannType (unannReferenceType (unannClassOrInterfaceType (unannClassType_lfno_unannClassOrInterfaceType Supplier (typeArguments < (typeArgumentList (typeArgument (referenceType (classOrInterfaceType (classType_lfno_classOrInterfaceType T))))) >))))) (variableDeclaratorId delegate)))) ))) (methodBody (block { (blockStatements (blockStatement (statement (ifThenStatement if ( (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName delegate)))))))) instanceof (referenceType (classOrInterfaceType (classType_lfno_classOrInterfaceType NonSerializableMemoizingSupplier)))))))))) || (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName delegate)))))))) instanceof (referenceType (classOrInterfaceType (classType_lfno_classOrInterfaceType MemoizingSupplier))))))))))))) ) (statement (statementWithoutTrailingSubstatement (block { (blockStatements (blockStatement (statement (statementWithoutTrailingSubstatement (returnStatement return (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName delegate))))))))))))))))) ;))))) })))))) (blockStatement (statement (statementWithoutTrailingSubstatement (returnStatement return (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName delegate)))))))) instanceof (referenceType (classOrInterfaceType (classType_lfno_classOrInterfaceType Serializable)))))))))) ? (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray_lfno_primary (classInstanceCreationExpression_lfno_primary new MemoizingSupplier (typeArgumentsOrDiamond (typeArguments < (typeArgumentList (typeArgument (referenceType (classOrInterfaceType (classType_lfno_classOrInterfaceType T))))) >)) ( (argumentList (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName delegate)))))))))))))))))) )))))))))))))))))))) : (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray_lfno_primary (classInstanceCreationExpression_lfno_primary new NonSerializableMemoizingSupplier (typeArgumentsOrDiamond (typeArguments < (typeArgumentList (typeArgument (referenceType (classOrInterfaceType (classType_lfno_classOrInterfaceType T))))) >)) ( (argumentList (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName delegate)))))))))))))))))) ))))))))))))))))))))) ;))))) }))))) (classBodyDeclaration (classMemberDeclaration (classDeclaration (normalClassDeclaration (classModifier (annotation (markerAnnotation @ (typeName VisibleForTesting)))) (classModifier static) class MemoizingSupplier (typeParameters < (typeParameterList (typeParameter T (typeBound extends (typeVariable (annotation (markerAnnotation @ (typeName Nullable))) Object)))) >) (superinterfaces implements (interfaceTypeList (interfaceType (classType Supplier (typeArguments < (typeArgumentList (typeArgument (referenceType (classOrInterfaceType (classType_lfno_classOrInterfaceType T))))) >))) , (interfaceType (classType Serializable)))) (classBody { (classBodyDeclaration (classMemberDeclaration (fieldDeclaration (fieldModifier final) (unannType (unannReferenceType (unannClassOrInterfaceType (unannClassType_lfno_unannClassOrInterfaceType Supplier (typeArguments < (typeArgumentList (typeArgument (referenceType (classOrInterfaceType (classType_lfno_classOrInterfaceType T))))) >))))) (variableDeclaratorList (variableDeclarator (variableDeclaratorId delegate))) ;))) (classBodyDeclaration (classMemberDeclaration (fieldDeclaration (fieldModifier transient) (fieldModifier volatile) (unannType (unannPrimitiveType boolean)) (variableDeclaratorList (variableDeclarator (variableDeclaratorId initialized))) ;))) (classBodyDeclaration (classMemberDeclaration (fieldDeclaration (fieldModifier (annotation (markerAnnotation @ (typeName CheckForNull)))) (fieldModifier transient) (unannType (unannReferenceType (unannClassOrInterfaceType (unannClassType_lfno_unannClassOrInterfaceType T)))) (variableDeclaratorList (variableDeclarator (variableDeclaratorId value))) ;))) (classBodyDeclaration (constructorDeclaration (constructorDeclarator (simpleTypeName MemoizingSupplier) ( (formalParameterList (lastFormalParameter (formalParameter (unannType (unannReferenceType (unannClassOrInterfaceType (unannClassType_lfno_unannClassOrInterfaceType Supplier (typeArguments < (typeArgumentList (typeArgument (referenceType (classOrInterfaceType (classType_lfno_classOrInterfaceType T))))) >))))) (variableDeclaratorId delegate)))) )) (constructorBody { (blockStatements (blockStatement (statement (statementWithoutTrailingSubstatement (expressionStatement (statementExpression (assignment (leftHandSide (fieldAccess (primary (primaryNoNewArray_lfno_primary this)) . delegate)) (assignmentOperator =) (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray_lfno_primary (methodInvocation_lfno_primary (methodName checkNotNull) ( (argumentList (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName delegate)))))))))))))))))) )))))))))))))))))))))) ;))))) }))) (classBodyDeclaration (classMemberDeclaration (methodDeclaration (methodModifier (annotation (markerAnnotation @ (typeName Override)))) (methodModifier (annotation (markerAnnotation @ (typeName ParametricNullness)))) (methodModifier public) (methodHeader (result (unannType (unannReferenceType (unannClassOrInterfaceType (unannClassType_lfno_unannClassOrInterfaceType T))))) (methodDeclarator get ( ))) (methodBody (block { (blockStatements (blockStatement (statement (ifThenStatement if ( (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus ! (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName initialized))))))))))))))))))) ) (statement (statementWithoutTrailingSubstatement (block { (blockStatements (blockStatement (statement (statementWithoutTrailingSubstatement (synchronizedStatement synchronized ( (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray_lfno_primary this)))))))))))))))))) ) (block { (blockStatements (blockStatement (statement (ifThenStatement if ( (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus ! (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName initialized))))))))))))))))))) ) (statement (statementWithoutTrailingSubstatement (block { (blockStatements (blockStatement (localVariableDeclarationStatement (localVariableDeclaration (unannType (unannReferenceType (unannClassOrInterfaceType (unannClassType_lfno_unannClassOrInterfaceType T)))) (variableDeclaratorList (variableDeclarator (variableDeclaratorId t) = (variableInitializer (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray_lfno_primary (methodInvocation_lfno_primary (typeName delegate) . get ( )))))))))))))))))))))))) ;)) (blockStatement (statement (statementWithoutTrailingSubstatement (expressionStatement (statementExpression (assignment (leftHandSide (expressionName value)) (assignmentOperator =) (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName t))))))))))))))))))) ;)))) (blockStatement (statement (statementWithoutTrailingSubstatement (expressionStatement (statementExpression (assignment (leftHandSide (expressionName initialized)) (assignmentOperator =) (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray_lfno_primary (literal BOOLEAN))))))))))))))))))))) ;)))) (blockStatement (statement (statementWithoutTrailingSubstatement (returnStatement return (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName t))))))))))))))))) ;))))) }))))))) })))))) })))))) (blockStatement (statement (statementWithoutTrailingSubstatement (returnStatement return (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray_lfno_primary (methodInvocation_lfno_primary (methodName uncheckedCastNullableTToT) ( (argumentList (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName value)))))))))))))))))) )))))))))))))))))))) ;))))) }))))) (classBodyDeclaration (classMemberDeclaration (methodDeclaration (methodModifier (annotation (markerAnnotation @ (typeName Override)))) (methodModifier public) (methodHeader (result (unannType (unannReferenceType (unannClassOrInterfaceType (unannClassType_lfno_unannClassOrInterfaceType String))))) (methodDeclarator toString ( ))) (methodBody (block { (blockStatements (blockStatement (statement (statementWithoutTrailingSubstatement (returnStatement return (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (additiveExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray_lfno_primary (literal STRING)))))))) + (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray_lfno_primary ( (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName initialized)))))))))))))) ? (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (additiveExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray_lfno_primary (literal STRING)))))))) + (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName value)))))) + (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray_lfno_primary (literal STRING))))))))))))))))))) : (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName delegate)))))))))))))))))) )))))))) + (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray_lfno_primary (literal STRING))))))))))))))))))) ;))))) }))))) (classBodyDeclaration (classMemberDeclaration (fieldDeclaration (fieldModifier private) (fieldModifier static) (fieldModifier final) (unannType (unannPrimitiveType (numericType (integralType long)))) (variableDeclaratorList (variableDeclarator (variableDeclaratorId serialVersionUID) = (variableInitializer (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray_lfno_primary (literal NUMBER)))))))))))))))))))))) ;))) }))))) (classBodyDeclaration (classMemberDeclaration (classDeclaration (normalClassDeclaration (classModifier (annotation (markerAnnotation @ (typeName VisibleForTesting)))) (classModifier static) class NonSerializableMemoizingSupplier (typeParameters < (typeParameterList (typeParameter T (typeBound extends (typeVariable (annotation (markerAnnotation @ (typeName Nullable))) Object)))) >) (superinterfaces implements (interfaceTypeList (interfaceType (classType Supplier (typeArguments < (typeArgumentList (typeArgument (referenceType (classOrInterfaceType (classType_lfno_classOrInterfaceType T))))) >))))) (classBody { (classBodyDeclaration (classMemberDeclaration (fieldDeclaration (fieldModifier (annotation (singleElementAnnotation @ (typeName SuppressWarnings) ( (elementValue (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray_lfno_primary (literal STRING)))))))))))))))))) )))) (fieldModifier private) (fieldModifier static) (fieldModifier final) (unannType (unannReferenceType (unannClassOrInterfaceType (unannClassType_lfno_unannClassOrInterfaceType Supplier (typeArguments < (typeArgumentList (typeArgument (referenceType (classOrInterfaceType (classType_lfno_classOrInterfaceType Void))))) >))))) (variableDeclaratorList (variableDeclarator (variableDeclaratorId SUCCESSFULLY_COMPUTED) = (variableInitializer (expression (lambdaExpression (lambdaParameters ( )) -> (lambdaBody (block { (blockStatements (blockStatement (statement (statementWithoutTrailingSubstatement (throwStatement throw (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray_lfno_primary (classInstanceCreationExpression_lfno_primary new IllegalStateException ( )))))))))))))))))))) ;))))) }))))))) ;))) (classBodyDeclaration (classMemberDeclaration (fieldDeclaration (fieldModifier private) (fieldModifier volatile) (unannType (unannReferenceType (unannClassOrInterfaceType (unannClassType_lfno_unannClassOrInterfaceType Supplier (typeArguments < (typeArgumentList (typeArgument (referenceType (classOrInterfaceType (classType_lfno_classOrInterfaceType T))))) >))))) (variableDeclaratorList (variableDeclarator (variableDeclaratorId delegate))) ;))) (classBodyDeclaration (classMemberDeclaration (fieldDeclaration (fieldModifier (annotation (markerAnnotation @ (typeName CheckForNull)))) (fieldModifier private) (unannType (unannReferenceType (unannClassOrInterfaceType (unannClassType_lfno_unannClassOrInterfaceType T)))) (variableDeclaratorList (variableDeclarator (variableDeclaratorId value))) ;))) (classBodyDeclaration (constructorDeclaration (constructorDeclarator (simpleTypeName NonSerializableMemoizingSupplier) ( (formalParameterList (lastFormalParameter (formalParameter (unannType (unannReferenceType (unannClassOrInterfaceType (unannClassType_lfno_unannClassOrInterfaceType Supplier (typeArguments < (typeArgumentList (typeArgument (referenceType (classOrInterfaceType (classType_lfno_classOrInterfaceType T))))) >))))) (variableDeclaratorId delegate)))) )) (constructorBody { (blockStatements (blockStatement (statement (statementWithoutTrailingSubstatement (expressionStatement (statementExpression (assignment (leftHandSide (fieldAccess (primary (primaryNoNewArray_lfno_primary this)) . delegate)) (assignmentOperator =) (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray_lfno_primary (methodInvocation_lfno_primary (methodName checkNotNull) ( (argumentList (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName delegate)))))))))))))))))) )))))))))))))))))))))) ;))))) }))) (classBodyDeclaration (classMemberDeclaration (methodDeclaration (methodModifier (annotation (markerAnnotation @ (typeName Override)))) (methodModifier (annotation (markerAnnotation @ (typeName ParametricNullness)))) (methodModifier (annotation (singleElementAnnotation @ (typeName SuppressWarnings) ( (elementValue (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray_lfno_primary (literal STRING)))))))))))))))))) )))) (methodModifier public) (methodHeader (result (unannType (unannReferenceType (unannClassOrInterfaceType (unannClassType_lfno_unannClassOrInterfaceType T))))) (methodDeclarator get ( ))) (methodBody (block { (blockStatements (blockStatement (statement (ifThenStatement if ( (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName delegate))))))))) != (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName SUCCESSFULLY_COMPUTED))))))))))))))))) ) (statement (statementWithoutTrailingSubstatement (block { (blockStatements (blockStatement (statement (statementWithoutTrailingSubstatement (synchronizedStatement synchronized ( (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray_lfno_primary this)))))))))))))))))) ) (block { (blockStatements (blockStatement (statement (ifThenStatement if ( (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName delegate))))))))) != (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName SUCCESSFULLY_COMPUTED))))))))))))))))) ) (statement (statementWithoutTrailingSubstatement (block { (blockStatements (blockStatement (localVariableDeclarationStatement (localVariableDeclaration (unannType (unannReferenceType (unannClassOrInterfaceType (unannClassType_lfno_unannClassOrInterfaceType T)))) (variableDeclaratorList (variableDeclarator (variableDeclaratorId t) = (variableInitializer (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray_lfno_primary (methodInvocation_lfno_primary (typeName delegate) . get ( )))))))))))))))))))))))) ;)) (blockStatement (statement (statementWithoutTrailingSubstatement (expressionStatement (statementExpression (assignment (leftHandSide (expressionName value)) (assignmentOperator =) (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName t))))))))))))))))))) ;)))) (blockStatement (statement (statementWithoutTrailingSubstatement (expressionStatement (statementExpression (assignment (leftHandSide (expressionName delegate)) (assignmentOperator =) (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (castExpression ( (referenceType (classOrInterfaceType (classType_lfno_classOrInterfaceType Supplier (typeArguments < (typeArgumentList (typeArgument (referenceType (classOrInterfaceType (classType_lfno_classOrInterfaceType T))))) >)))) ) (unaryExpressionNotPlusMinus (postfixExpression (expressionName SUCCESSFULLY_COMPUTED))))))))))))))))))))) ;)))) (blockStatement (statement (statementWithoutTrailingSubstatement (returnStatement return (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName t))))))))))))))))) ;))))) }))))))) })))))) })))))) (blockStatement (statement (statementWithoutTrailingSubstatement (returnStatement return (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray_lfno_primary (methodInvocation_lfno_primary (methodName uncheckedCastNullableTToT) ( (argumentList (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName value)))))))))))))))))) )))))))))))))))))))) ;))))) }))))) (classBodyDeclaration (classMemberDeclaration (methodDeclaration (methodModifier (annotation (markerAnnotation @ (typeName Override)))) (methodModifier public) (methodHeader (result (unannType (unannReferenceType (unannClassOrInterfaceType (unannClassType_lfno_unannClassOrInterfaceType String))))) (methodDeclarator toString ( ))) (methodBody (block { (blockStatements (blockStatement (localVariableDeclarationStatement (localVariableDeclaration (unannType (unannReferenceType (unannClassOrInterfaceType (unannClassType_lfno_unannClassOrInterfaceType Supplier (typeArguments < (typeArgumentList (typeArgument (referenceType (classOrInterfaceType (classType_lfno_classOrInterfaceType T))))) >))))) (variableDeclaratorList (variableDeclarator (variableDeclaratorId delegate) = (variableInitializer (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray_lfno_primary this) (primaryNoNewArray_lf_primary (fieldAccess_lf_primary . delegate))))))))))))))))))))))) ;)) (blockStatement (statement (statementWithoutTrailingSubstatement (returnStatement return (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (additiveExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray_lfno_primary (literal STRING)))))))) + (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray_lfno_primary ( (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName delegate))))))))) == (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName SUCCESSFULLY_COMPUTED)))))))))))))) ? (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (additiveExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray_lfno_primary (literal STRING)))))))) + (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName value)))))) + (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray_lfno_primary (literal STRING))))))))))))))))))) : (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName delegate)))))))))))))))))) )))))))) + (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray_lfno_primary (literal STRING))))))))))))))))))) ;))))) }))))) }))))) (classBodyDeclaration (classMemberDeclaration (methodDeclaration (methodModifier (annotation (singleElementAnnotation @ (typeName SuppressWarnings) ( (elementValue (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray_lfno_primary (literal STRING)))))))))))))))))) )))) (methodModifier public) (methodModifier static) (methodHeader (typeParameters < (typeParameterList (typeParameter T (typeBound extends (typeVariable (annotation (markerAnnotation @ (typeName Nullable))) Object)))) >) (result (unannType (unannReferenceType (unannClassOrInterfaceType (unannClassType_lfno_unannClassOrInterfaceType Supplier (typeArguments < (typeArgumentList (typeArgument (referenceType (classOrInterfaceType (classType_lfno_classOrInterfaceType T))))) >)))))) (methodDeclarator memoizeWithExpiration ( (formalParameterList (formalParameters (formalParameter (unannType (unannReferenceType (unannClassOrInterfaceType (unannClassType_lfno_unannClassOrInterfaceType Supplier (typeArguments < (typeArgumentList (typeArgument (referenceType (classOrInterfaceType (classType_lfno_classOrInterfaceType T))))) >))))) (variableDeclaratorId delegate)) , (formalParameter (unannType (unannPrimitiveType (numericType (integralType long)))) (variableDeclaratorId duration))) , (lastFormalParameter (formalParameter (unannType (unannReferenceType (unannClassOrInterfaceType (unannClassType_lfno_unannClassOrInterfaceType TimeUnit)))) (variableDeclaratorId unit)))) ))) (methodBody (block { (blockStatements (blockStatement (statement (statementWithoutTrailingSubstatement (returnStatement return (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray_lfno_primary (classInstanceCreationExpression_lfno_primary new ExpiringMemoizingSupplier (typeArgumentsOrDiamond < >) ( (argumentList (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName delegate))))))))))))))))) , (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName duration))))))))))))))))) , (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName unit)))))))))))))))))) )))))))))))))))))))) ;))))) }))))) (classBodyDeclaration (classMemberDeclaration (classDeclaration (normalClassDeclaration (classModifier (annotation (markerAnnotation @ (typeName VisibleForTesting)))) (classModifier (annotation (singleElementAnnotation @ (typeName SuppressWarnings) ( (elementValue (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray_lfno_primary (literal STRING)))))))))))))))))) )))) (classModifier static) class ExpiringMemoizingSupplier (typeParameters < (typeParameterList (typeParameter T (typeBound extends (typeVariable (annotation (markerAnnotation @ (typeName Nullable))) Object)))) >) (superinterfaces implements (interfaceTypeList (interfaceType (classType Supplier (typeArguments < (typeArgumentList (typeArgument (referenceType (classOrInterfaceType (classType_lfno_classOrInterfaceType T))))) >))) , (interfaceType (classType Serializable)))) (classBody { (classBodyDeclaration (classMemberDeclaration (fieldDeclaration (fieldModifier final) (unannType (unannReferenceType (unannClassOrInterfaceType (unannClassType_lfno_unannClassOrInterfaceType Supplier (typeArguments < (typeArgumentList (typeArgument (referenceType (classOrInterfaceType (classType_lfno_classOrInterfaceType T))))) >))))) (variableDeclaratorList (variableDeclarator (variableDeclaratorId delegate))) ;))) (classBodyDeclaration (classMemberDeclaration (fieldDeclaration (fieldModifier final) (unannType (unannPrimitiveType (numericType (integralType long)))) (variableDeclaratorList (variableDeclarator (variableDeclaratorId durationNanos))) ;))) (classBodyDeclaration (classMemberDeclaration (fieldDeclaration (fieldModifier (annotation (markerAnnotation @ (typeName CheckForNull)))) (fieldModifier transient) (fieldModifier volatile) (unannType (unannReferenceType (unannClassOrInterfaceType (unannClassType_lfno_unannClassOrInterfaceType T)))) (variableDeclaratorList (variableDeclarator (variableDeclaratorId value))) ;))) (classBodyDeclaration (classMemberDeclaration (fieldDeclaration (fieldModifier transient) (fieldModifier volatile) (unannType (unannPrimitiveType (numericType (integralType long)))) (variableDeclaratorList (variableDeclarator (variableDeclaratorId expirationNanos))) ;))) (classBodyDeclaration (constructorDeclaration (constructorDeclarator (simpleTypeName ExpiringMemoizingSupplier) ( (formalParameterList (formalParameters (formalParameter (unannType (unannReferenceType (unannClassOrInterfaceType (unannClassType_lfno_unannClassOrInterfaceType Supplier (typeArguments < (typeArgumentList (typeArgument (referenceType (classOrInterfaceType (classType_lfno_classOrInterfaceType T))))) >))))) (variableDeclaratorId delegate)) , (formalParameter (unannType (unannPrimitiveType (numericType (integralType long)))) (variableDeclaratorId duration))) , (lastFormalParameter (formalParameter (unannType (unannReferenceType (unannClassOrInterfaceType (unannClassType_lfno_unannClassOrInterfaceType TimeUnit)))) (variableDeclaratorId unit)))) )) (constructorBody { (blockStatements (blockStatement (statement (statementWithoutTrailingSubstatement (expressionStatement (statementExpression (assignment (leftHandSide (fieldAccess (primary (primaryNoNewArray_lfno_primary this)) . delegate)) (assignmentOperator =) (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray_lfno_primary (methodInvocation_lfno_primary (methodName checkNotNull) ( (argumentList (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName delegate)))))))))))))))))) )))))))))))))))))))))) ;)))) (blockStatement (statement (statementWithoutTrailingSubstatement (expressionStatement (statementExpression (assignment (leftHandSide (fieldAccess (primary (primaryNoNewArray_lfno_primary this)) . durationNanos)) (assignmentOperator =) (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray_lfno_primary (methodInvocation_lfno_primary (typeName unit) . toNanos ( (argumentList (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName duration)))))))))))))))))) )))))))))))))))))))))) ;)))) (blockStatement (statement (statementWithoutTrailingSubstatement (expressionStatement (statementExpression (methodInvocation (methodName checkArgument) ( (argumentList (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName duration)))))))) > (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray_lfno_primary (literal NUMBER))))))))))))))))))) , (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray_lfno_primary (literal STRING))))))))))))))))))) , (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName duration))))))))))))))))) , (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName unit)))))))))))))))))) ))) ;))))) }))) (classBodyDeclaration (classMemberDeclaration (methodDeclaration (methodModifier (annotation (markerAnnotation @ (typeName Override)))) (methodModifier (annotation (markerAnnotation @ (typeName ParametricNullness)))) (methodModifier public) (methodHeader (result (unannType (unannReferenceType (unannClassOrInterfaceType (unannClassType_lfno_unannClassOrInterfaceType T))))) (methodDeclarator get ( ))) (methodBody (block { (blockStatements (blockStatement (localVariableDeclarationStatement (localVariableDeclaration (unannType (unannPrimitiveType (numericType (integralType long)))) (variableDeclaratorList (variableDeclarator (variableDeclaratorId nanos) = (variableInitializer (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName expirationNanos))))))))))))))))))))) ;)) (blockStatement (localVariableDeclarationStatement (localVariableDeclaration (unannType (unannPrimitiveType (numericType (integralType long)))) (variableDeclaratorList (variableDeclarator (variableDeclaratorId now) = (variableInitializer (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray_lfno_primary (methodInvocation_lfno_primary (typeName Platform) . systemNanoTime ( )))))))))))))))))))))))) ;)) (blockStatement (statement (ifThenStatement if ( (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName nanos))))))))) == (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray_lfno_primary (literal NUMBER)))))))))))))))) || (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (relationalExpression (shiftExpression (additiveExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName now)))))) - (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName nanos)))))))) >= (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray_lfno_primary (literal NUMBER))))))))))))))))))) ) (statement (statementWithoutTrailingSubstatement (block { (blockStatements (blockStatement (statement (statementWithoutTrailingSubstatement (synchronizedStatement synchronized ( (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray_lfno_primary this)))))))))))))))))) ) (block { (blockStatements (blockStatement (statement (ifThenStatement if ( (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName nanos))))))))) == (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName expirationNanos))))))))))))))))) ) (statement (statementWithoutTrailingSubstatement (block { (blockStatements (blockStatement (localVariableDeclarationStatement (localVariableDeclaration (unannType (unannReferenceType (unannClassOrInterfaceType (unannClassType_lfno_unannClassOrInterfaceType T)))) (variableDeclaratorList (variableDeclarator (variableDeclaratorId t) = (variableInitializer (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray_lfno_primary (methodInvocation_lfno_primary (typeName delegate) . get ( )))))))))))))))))))))))) ;)) (blockStatement (statement (statementWithoutTrailingSubstatement (expressionStatement (statementExpression (assignment (leftHandSide (expressionName value)) (assignmentOperator =) (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName t))))))))))))))))))) ;)))) (blockStatement (statement (statementWithoutTrailingSubstatement (expressionStatement (statementExpression (assignment (leftHandSide (expressionName nanos)) (assignmentOperator =) (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName now)))))) + (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName durationNanos))))))))))))))))))) ;)))) (blockStatement (statement (statementWithoutTrailingSubstatement (expressionStatement (statementExpression (assignment (leftHandSide (expressionName expirationNanos)) (assignmentOperator =) (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray_lfno_primary ( (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName nanos))))))))) == (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray_lfno_primary (literal NUMBER))))))))))))))))))) )))))))))))))))) ? (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray_lfno_primary (literal NUMBER))))))))))))))))))) : (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName nanos)))))))))))))))))))) ;)))) (blockStatement (statement (statementWithoutTrailingSubstatement (returnStatement return (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName t))))))))))))))))) ;))))) }))))))) })))))) })))))) (blockStatement (statement (statementWithoutTrailingSubstatement (returnStatement return (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray_lfno_primary (methodInvocation_lfno_primary (methodName uncheckedCastNullableTToT) ( (argumentList (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName value)))))))))))))))))) )))))))))))))))))))) ;))))) }))))) (classBodyDeclaration (classMemberDeclaration (methodDeclaration (methodModifier (annotation (markerAnnotation @ (typeName Override)))) (methodModifier public) (methodHeader (result (unannType (unannReferenceType (unannClassOrInterfaceType (unannClassType_lfno_unannClassOrInterfaceType String))))) (methodDeclarator toString ( ))) (methodBody (block { (blockStatements (blockStatement (statement (statementWithoutTrailingSubstatement (returnStatement return (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (additiveExpression (additiveExpression (additiveExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray_lfno_primary (literal STRING)))))))) + (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName delegate)))))) + (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray_lfno_primary (literal STRING)))))))) + (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName durationNanos)))))) + (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray_lfno_primary (literal STRING))))))))))))))))))) ;))))) }))))) (classBodyDeclaration (classMemberDeclaration (fieldDeclaration (fieldModifier private) (fieldModifier static) (fieldModifier final) (unannType (unannPrimitiveType (numericType (integralType long)))) (variableDeclaratorList (variableDeclarator (variableDeclaratorId serialVersionUID) = (variableInitializer (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray_lfno_primary (literal NUMBER)))))))))))))))))))))) ;))) }))))) (classBodyDeclaration (classMemberDeclaration (methodDeclaration (methodModifier public) (methodModifier static) (methodHeader (typeParameters < (typeParameterList (typeParameter T (typeBound extends (typeVariable (annotation (markerAnnotation @ (typeName Nullable))) Object)))) >) (result (unannType (unannReferenceType (unannClassOrInterfaceType (unannClassType_lfno_unannClassOrInterfaceType Supplier (typeArguments < (typeArgumentList (typeArgument (referenceType (classOrInterfaceType (classType_lfno_classOrInterfaceType T))))) >)))))) (methodDeclarator ofInstance ( (formalParameterList (lastFormalParameter (formalParameter (variableModifier (annotation (markerAnnotation @ (typeName ParametricNullness)))) (unannType (unannReferenceType (unannClassOrInterfaceType (unannClassType_lfno_unannClassOrInterfaceType T)))) (variableDeclaratorId instance)))) ))) (methodBody (block { (blockStatements (blockStatement (statement (statementWithoutTrailingSubstatement (returnStatement return (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray_lfno_primary (classInstanceCreationExpression_lfno_primary new SupplierOfInstance (typeArgumentsOrDiamond < >) ( (argumentList (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName instance)))))))))))))))))) )))))))))))))))))))) ;))))) }))))) (classBodyDeclaration (classMemberDeclaration (classDeclaration (normalClassDeclaration (classModifier private) (classModifier static) class SupplierOfInstance (typeParameters < (typeParameterList (typeParameter T (typeBound extends (typeVariable (annotation (markerAnnotation @ (typeName Nullable))) Object)))) >) (superinterfaces implements (interfaceTypeList (interfaceType (classType Supplier (typeArguments < (typeArgumentList (typeArgument (referenceType (classOrInterfaceType (classType_lfno_classOrInterfaceType T))))) >))) , (interfaceType (classType Serializable)))) (classBody { (classBodyDeclaration (classMemberDeclaration (fieldDeclaration (fieldModifier (annotation (markerAnnotation @ (typeName ParametricNullness)))) (fieldModifier final) (unannType (unannReferenceType (unannClassOrInterfaceType (unannClassType_lfno_unannClassOrInterfaceType T)))) (variableDeclaratorList (variableDeclarator (variableDeclaratorId instance))) ;))) (classBodyDeclaration (constructorDeclaration (constructorDeclarator (simpleTypeName SupplierOfInstance) ( (formalParameterList (lastFormalParameter (formalParameter (variableModifier (annotation (markerAnnotation @ (typeName ParametricNullness)))) (unannType (unannReferenceType (unannClassOrInterfaceType (unannClassType_lfno_unannClassOrInterfaceType T)))) (variableDeclaratorId instance)))) )) (constructorBody { (blockStatements (blockStatement (statement (statementWithoutTrailingSubstatement (expressionStatement (statementExpression (assignment (leftHandSide (fieldAccess (primary (primaryNoNewArray_lfno_primary this)) . instance)) (assignmentOperator =) (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName instance))))))))))))))))))) ;))))) }))) (classBodyDeclaration (classMemberDeclaration (methodDeclaration (methodModifier (annotation (markerAnnotation @ (typeName Override)))) (methodModifier (annotation (markerAnnotation @ (typeName ParametricNullness)))) (methodModifier public) (methodHeader (result (unannType (unannReferenceType (unannClassOrInterfaceType (unannClassType_lfno_unannClassOrInterfaceType T))))) (methodDeclarator get ( ))) (methodBody (block { (blockStatements (blockStatement (statement (statementWithoutTrailingSubstatement (returnStatement return (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName instance))))))))))))))))) ;))))) }))))) (classBodyDeclaration (classMemberDeclaration (methodDeclaration (methodModifier (annotation (markerAnnotation @ (typeName Override)))) (methodModifier public) (methodHeader (result (unannType (unannPrimitiveType boolean))) (methodDeclarator equals ( (formalParameterList (lastFormalParameter (formalParameter (variableModifier (annotation (markerAnnotation @ (typeName CheckForNull)))) (unannType (unannReferenceType (unannClassOrInterfaceType (unannClassType_lfno_unannClassOrInterfaceType Object)))) (variableDeclaratorId obj)))) ))) (methodBody (block { (blockStatements (blockStatement (statement (ifThenStatement if ( (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName obj)))))))) instanceof (referenceType (classOrInterfaceType (classType_lfno_classOrInterfaceType SupplierOfInstance))))))))))))) ) (statement (statementWithoutTrailingSubstatement (block { (blockStatements (blockStatement (localVariableDeclarationStatement (localVariableDeclaration (unannType (unannReferenceType (unannClassOrInterfaceType (unannClassType_lfno_unannClassOrInterfaceType SupplierOfInstance (typeArguments < (typeArgumentList (typeArgument (wildcard ?))) >))))) (variableDeclaratorList (variableDeclarator (variableDeclaratorId that) = (variableInitializer (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (castExpression ( (referenceType (classOrInterfaceType (classType_lfno_classOrInterfaceType SupplierOfInstance (typeArguments < (typeArgumentList (typeArgument (wildcard ?))) >)))) ) (unaryExpressionNotPlusMinus (postfixExpression (expressionName obj))))))))))))))))))))))) ;)) (blockStatement (statement (statementWithoutTrailingSubstatement (returnStatement return (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray_lfno_primary (methodInvocation_lfno_primary (typeName Objects) . equal ( (argumentList (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName instance))))))))))))))))) , (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName (ambiguousName that) . instance)))))))))))))))))) )))))))))))))))))))) ;))))) })))))) (blockStatement (statement (statementWithoutTrailingSubstatement (returnStatement return (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray_lfno_primary (literal BOOLEAN))))))))))))))))))) ;))))) }))))) (classBodyDeclaration (classMemberDeclaration (methodDeclaration (methodModifier (annotation (markerAnnotation @ (typeName Override)))) (methodModifier public) (methodHeader (result (unannType (unannPrimitiveType (numericType (integralType int))))) (methodDeclarator hashCode ( ))) (methodBody (block { (blockStatements (blockStatement (statement (statementWithoutTrailingSubstatement (returnStatement return (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray_lfno_primary (methodInvocation_lfno_primary (typeName Objects) . hashCode ( (argumentList (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName instance)))))))))))))))))) )))))))))))))))))))) ;))))) }))))) (classBodyDeclaration (classMemberDeclaration (methodDeclaration (methodModifier (annotation (markerAnnotation @ (typeName Override)))) (methodModifier public) (methodHeader (result (unannType (unannReferenceType (unannClassOrInterfaceType (unannClassType_lfno_unannClassOrInterfaceType String))))) (methodDeclarator toString ( ))) (methodBody (block { (blockStatements (blockStatement (statement (statementWithoutTrailingSubstatement (returnStatement return (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (additiveExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray_lfno_primary (literal STRING)))))))) + (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName instance)))))) + (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray_lfno_primary (literal STRING))))))))))))))))))) ;))))) }))))) (classBodyDeclaration (classMemberDeclaration (fieldDeclaration (fieldModifier private) (fieldModifier static) (fieldModifier final) (unannType (unannPrimitiveType (numericType (integralType long)))) (variableDeclaratorList (variableDeclarator (variableDeclaratorId serialVersionUID) = (variableInitializer (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray_lfno_primary (literal NUMBER)))))))))))))))))))))) ;))) }))))) (classBodyDeclaration (classMemberDeclaration (methodDeclaration (methodModifier public) (methodModifier static) (methodHeader (typeParameters < (typeParameterList (typeParameter T (typeBound extends (typeVariable (annotation (markerAnnotation @ (typeName Nullable))) Object)))) >) (result (unannType (unannReferenceType (unannClassOrInterfaceType (unannClassType_lfno_unannClassOrInterfaceType Supplier (typeArguments < (typeArgumentList (typeArgument (referenceType (classOrInterfaceType (classType_lfno_classOrInterfaceType T))))) >)))))) (methodDeclarator synchronizedSupplier ( (formalParameterList (lastFormalParameter (formalParameter (unannType (unannReferenceType (unannClassOrInterfaceType (unannClassType_lfno_unannClassOrInterfaceType Supplier (typeArguments < (typeArgumentList (typeArgument (referenceType (classOrInterfaceType (classType_lfno_classOrInterfaceType T))))) >))))) (variableDeclaratorId delegate)))) ))) (methodBody (block { (blockStatements (blockStatement (statement (statementWithoutTrailingSubstatement (returnStatement return (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray_lfno_primary (classInstanceCreationExpression_lfno_primary new ThreadSafeSupplier (typeArgumentsOrDiamond < >) ( (argumentList (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName delegate)))))))))))))))))) )))))))))))))))))))) ;))))) }))))) (classBodyDeclaration (classMemberDeclaration (classDeclaration (normalClassDeclaration (classModifier private) (classModifier static) class ThreadSafeSupplier (typeParameters < (typeParameterList (typeParameter T (typeBound extends (typeVariable (annotation (markerAnnotation @ (typeName Nullable))) Object)))) >) (superinterfaces implements (interfaceTypeList (interfaceType (classType Supplier (typeArguments < (typeArgumentList (typeArgument (referenceType (classOrInterfaceType (classType_lfno_classOrInterfaceType T))))) >))) , (interfaceType (classType Serializable)))) (classBody { (classBodyDeclaration (classMemberDeclaration (fieldDeclaration (fieldModifier final) (unannType (unannReferenceType (unannClassOrInterfaceType (unannClassType_lfno_unannClassOrInterfaceType Supplier (typeArguments < (typeArgumentList (typeArgument (referenceType (classOrInterfaceType (classType_lfno_classOrInterfaceType T))))) >))))) (variableDeclaratorList (variableDeclarator (variableDeclaratorId delegate))) ;))) (classBodyDeclaration (constructorDeclaration (constructorDeclarator (simpleTypeName ThreadSafeSupplier) ( (formalParameterList (lastFormalParameter (formalParameter (unannType (unannReferenceType (unannClassOrInterfaceType (unannClassType_lfno_unannClassOrInterfaceType Supplier (typeArguments < (typeArgumentList (typeArgument (referenceType (classOrInterfaceType (classType_lfno_classOrInterfaceType T))))) >))))) (variableDeclaratorId delegate)))) )) (constructorBody { (blockStatements (blockStatement (statement (statementWithoutTrailingSubstatement (expressionStatement (statementExpression (assignment (leftHandSide (fieldAccess (primary (primaryNoNewArray_lfno_primary this)) . delegate)) (assignmentOperator =) (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray_lfno_primary (methodInvocation_lfno_primary (methodName checkNotNull) ( (argumentList (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName delegate)))))))))))))))))) )))))))))))))))))))))) ;))))) }))) (classBodyDeclaration (classMemberDeclaration (methodDeclaration (methodModifier (annotation (markerAnnotation @ (typeName Override)))) (methodModifier (annotation (markerAnnotation @ (typeName ParametricNullness)))) (methodModifier public) (methodHeader (result (unannType (unannReferenceType (unannClassOrInterfaceType (unannClassType_lfno_unannClassOrInterfaceType T))))) (methodDeclarator get ( ))) (methodBody (block { (blockStatements (blockStatement (statement (statementWithoutTrailingSubstatement (synchronizedStatement synchronized ( (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName delegate))))))))))))))))) ) (block { (blockStatements (blockStatement (statement (statementWithoutTrailingSubstatement (returnStatement return (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray_lfno_primary (methodInvocation_lfno_primary (typeName delegate) . get ( )))))))))))))))))))) ;))))) })))))) }))))) (classBodyDeclaration (classMemberDeclaration (methodDeclaration (methodModifier (annotation (markerAnnotation @ (typeName Override)))) (methodModifier public) (methodHeader (result (unannType (unannReferenceType (unannClassOrInterfaceType (unannClassType_lfno_unannClassOrInterfaceType String))))) (methodDeclarator toString ( ))) (methodBody (block { (blockStatements (blockStatement (statement (statementWithoutTrailingSubstatement (returnStatement return (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (additiveExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray_lfno_primary (literal STRING)))))))) + (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName delegate)))))) + (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray_lfno_primary (literal STRING))))))))))))))))))) ;))))) }))))) (classBodyDeclaration (classMemberDeclaration (fieldDeclaration (fieldModifier private) (fieldModifier static) (fieldModifier final) (unannType (unannPrimitiveType (numericType (integralType long)))) (variableDeclaratorList (variableDeclarator (variableDeclaratorId serialVersionUID) = (variableInitializer (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray_lfno_primary (literal NUMBER)))))))))))))))))))))) ;))) }))))) (classBodyDeclaration (classMemberDeclaration (methodDeclaration (methodModifier public) (methodModifier static) (methodHeader (typeParameters < (typeParameterList (typeParameter T (typeBound extends (typeVariable (annotation (markerAnnotation @ (typeName Nullable))) Object)))) >) (result (unannType (unannReferenceType (unannClassOrInterfaceType (unannClassType_lfno_unannClassOrInterfaceType Function (typeArguments < (typeArgumentList (typeArgument (referenceType (classOrInterfaceType (classType_lfno_classOrInterfaceType Supplier (typeArguments < (typeArgumentList (typeArgument (referenceType (classOrInterfaceType (classType_lfno_classOrInterfaceType T))))) >))))) , (typeArgument (referenceType (classOrInterfaceType (classType_lfno_classOrInterfaceType T))))) >)))))) (methodDeclarator supplierFunction ( ))) (methodBody (block { (blockStatements (blockStatement (localVariableDeclarationStatement (localVariableDeclaration (variableModifier (annotation (singleElementAnnotation @ (typeName SuppressWarnings) ( (elementValue (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray_lfno_primary (literal STRING)))))))))))))))))) )))) (unannType (unannReferenceType (unannClassOrInterfaceType (unannClassType_lfno_unannClassOrInterfaceType SupplierFunction (typeArguments < (typeArgumentList (typeArgument (referenceType (classOrInterfaceType (classType_lfno_classOrInterfaceType T))))) >))))) (variableDeclaratorList (variableDeclarator (variableDeclaratorId sf) = (variableInitializer (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (castExpression ( (referenceType (classOrInterfaceType (classType_lfno_classOrInterfaceType SupplierFunction (typeArguments < (typeArgumentList (typeArgument (referenceType (classOrInterfaceType (classType_lfno_classOrInterfaceType T))))) >)))) ) (unaryExpressionNotPlusMinus (postfixExpression (expressionName (ambiguousName SupplierFunctionImpl) . INSTANCE))))))))))))))))))))))) ;)) (blockStatement (statement (statementWithoutTrailingSubstatement (returnStatement return (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName sf))))))))))))))))) ;))))) }))))) (classBodyDeclaration (classMemberDeclaration (interfaceDeclaration (normalInterfaceDeclaration (interfaceModifier private) interface SupplierFunction (typeParameters < (typeParameterList (typeParameter T (typeBound extends (typeVariable (annotation (markerAnnotation @ (typeName Nullable))) Object)))) >) (extendsInterfaces extends (interfaceTypeList (interfaceType (classType Function (typeArguments < (typeArgumentList (typeArgument (referenceType (classOrInterfaceType (classType_lfno_classOrInterfaceType Supplier (typeArguments < (typeArgumentList (typeArgument (referenceType (classOrInterfaceType (classType_lfno_classOrInterfaceType T))))) >))))) , (typeArgument (referenceType (classOrInterfaceType (classType_lfno_classOrInterfaceType T))))) >))))) (interfaceBody { }))))) (classBodyDeclaration (classMemberDeclaration (classDeclaration (enumDeclaration (classModifier private) enum SupplierFunctionImpl (superinterfaces implements (interfaceTypeList (interfaceType (classType SupplierFunction (typeArguments < (typeArgumentList (typeArgument (referenceType (classOrInterfaceType (classType_lfno_classOrInterfaceType (annotation (markerAnnotation @ (typeName Nullable))) Object))))) >))))) (enumBody { (enumConstantList (enumConstant INSTANCE)) (enumBodyDeclarations ; (classBodyDeclaration (classMemberDeclaration (methodDeclaration (methodModifier (annotation (markerAnnotation @ (typeName Override)))) (methodModifier (annotation (markerAnnotation @ (typeName CheckForNull)))) (methodModifier public) (methodHeader (result (unannType (unannReferenceType (unannClassOrInterfaceType (unannClassType_lfno_unannClassOrInterfaceType Object))))) (methodDeclarator apply ( (formalParameterList (lastFormalParameter (formalParameter (unannType (unannReferenceType (unannClassOrInterfaceType (unannClassType_lfno_unannClassOrInterfaceType Supplier (typeArguments < (typeArgumentList (typeArgument (referenceType (classOrInterfaceType (classType_lfno_classOrInterfaceType (annotation (markerAnnotation @ (typeName Nullable))) Object))))) >))))) (variableDeclaratorId input)))) ))) (methodBody (block { (blockStatements (blockStatement (statement (statementWithoutTrailingSubstatement (returnStatement return (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray_lfno_primary (methodInvocation_lfno_primary (typeName input) . get ( )))))))))))))))))))) ;))))) }))))) (classBodyDeclaration (classMemberDeclaration (methodDeclaration (methodModifier (annotation (markerAnnotation @ (typeName Override)))) (methodModifier public) (methodHeader (result (unannType (unannReferenceType (unannClassOrInterfaceType (unannClassType_lfno_unannClassOrInterfaceType String))))) (methodDeclarator toString ( ))) (methodBody (block { (blockStatements (blockStatement (statement (statementWithoutTrailingSubstatement (returnStatement return (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray_lfno_primary (literal STRING))))))))))))))))))) ;))))) })))))) }))))) })))) <EOF>)