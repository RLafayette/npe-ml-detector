(compilationUnit (packageDeclaration package (packageName try_wr_close) ;) (importDeclaration (singleTypeImportDeclaration import (typeName (packageOrTypeName (packageOrTypeName java) . io) . IOException) ;)) (typeDeclaration (classDeclaration (normalClassDeclaration (classModifier public) class ResourceUser (classBody { (classBodyDeclaration (classMemberDeclaration (methodDeclaration (methodModifier public) (methodHeader (result void) (methodDeclarator useResource ( ))) (methodBody (block { (blockStatements (blockStatement (statement (statementWithoutTrailingSubstatement (tryStatement (tryWithResourcesStatement try (resourceSpecification ( (resourceList (resource (unannType (unannReferenceType (unannClassOrInterfaceType (unannClassType_lfno_unannClassOrInterfaceType Resource)))) (variableDeclaratorId test) = (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray_lfno_primary (classInstanceCreationExpression_lfno_primary new Resource ( )))))))))))))))))))))) )) (block { }) (catches (catchClause catch ( (catchFormalParameter (catchType (unannClassType IOException)) (variableDeclaratorId e)) ) (block { (blockStatements (blockStatement (statement (statementWithoutTrailingSubstatement (expressionStatement (statementExpression (methodInvocation (typeName e) . printStackTrace ( ))) ;))))) }))))))))) }))))) (classBodyDeclaration (classMemberDeclaration (methodDeclaration (methodModifier public) (methodModifier static) (methodHeader (result void) (methodDeclarator main ( (formalParameterList (lastFormalParameter (formalParameter (unannType (unannReferenceType (unannArrayType (unannClassOrInterfaceType (unannClassType_lfno_unannClassOrInterfaceType String)) (dims [ ])))) (variableDeclaratorId args)))) ))) (methodBody (block { (blockStatements (blockStatement (statement (statementWithoutTrailingSubstatement (expressionStatement (statementExpression (methodInvocation (primary (primaryNoNewArray_lfno_primary ( (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray_lfno_primary (classInstanceCreationExpression_lfno_primary new ResourceUser ( )))))))))))))))))))) ))) . useResource ( ))) ;))))) }))))) })))) <EOF>)